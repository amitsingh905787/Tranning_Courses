1. Basic Commands

echo "Hello" → prints text to the terminal.

cal 2017 / cal 12 2017 → shows calendar (month/year).

date → shows system date/time.

Wrong casing (e.g., dAte) fails because Linux is case-sensitive.

2. Understanding Command Structure

Format:

commandName [options] [arguments/input]


Examples:

echo $PATH → prints environment variable PATH.

which cal → shows location of a command (/usr/bin/cal).

date -u → shows time in UTC.

Invalid options (e.g., date -abcde) return errors with hints.

3. Using Linux Manual (man)

man -k which → search for commands related to "which".

man which → manual page for which.

man ls → shows detailed usage of ls.

Searching with man -k "list directory contents" lists commands like ls, dir, vdir.

4. Navigating Directories

cd → change directory.

ls -l --human-readable → long listing with readable file sizes.

5. Input/Output Redirection

Standard output (stdout):

cat 1> output.txt → redirects output to a file (overwrites).

cat 1>> output.txt → appends output to a file.

Standard error (stderr):

cat -k bla 2> error.txt → redirect errors to file.

2>> → append errors to file.

Standard input (stdin):

cat < input.txt → takes input from a file.

cat 0< input.txt 1> hello.txt → reads from input.txt, writes to hello.txt.

6. Key Learnings

Linux is case-sensitive (date ≠ dAte).

Commands are found in system paths (which date).

man is your best friend for exploring commands.

Redirection (>, >>, <, 2>) helps manage outputs and errors.
